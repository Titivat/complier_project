
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftGREATERGREATEREQULESSLESSEUQEQUEQUNOTEQUleftADDSUBleftMULDIVINTDIVleftPOWADD DIV EQU EQUEQU FLOAT GREATER GREATEREQU INT INTDIV LESS LESSEUQ LPAREN MUL NOTEQU POW RPAREN SCI SUB VAR\n    calc : expression\n         | var_assign\n         | empty\n    \n    var_assign : VAR EQU expression\n    \n    expression : expression POW expression\n               | expression MUL expression\n               | expression DIV expression\n               | expression INTDIV expression\n               | expression SUB expression\n               | expression ADD expression\n               | expression GREATER expression\n               | expression GREATEREQU expression\n               | expression LESS expression\n               | expression LESSEUQ expression\n               | expression EQUEQU expression\n               | expression NOTEQU expression\n    \n    expression : INT\n               | FLOAT\n               | SCI\n               | parentheses\n    \n    parentheses : LPAREN expression RPAREN\n    \n    expression : VAR\n    \n    empty :\n    '
    
_lr_action_items = {'INT':([0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'FLOAT':([0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'SCI':([0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'VAR':([0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[9,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'$end':([0,1,2,3,4,5,6,7,8,9,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[-23,0,-1,-2,-3,-17,-18,-19,-20,-22,-22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-4,-21,]),'LPAREN':([0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'POW':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[11,-17,-18,-19,-20,-22,11,-22,-5,11,11,11,11,11,11,11,11,11,11,11,11,-21,]),'MUL':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[12,-17,-18,-19,-20,-22,12,-22,-5,-6,-7,-8,12,12,12,12,12,12,12,12,12,-21,]),'DIV':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[13,-17,-18,-19,-20,-22,13,-22,-5,-6,-7,-8,13,13,13,13,13,13,13,13,13,-21,]),'INTDIV':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[14,-17,-18,-19,-20,-22,14,-22,-5,-6,-7,-8,14,14,14,14,14,14,14,14,14,-21,]),'SUB':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[15,-17,-18,-19,-20,-22,15,-22,-5,-6,-7,-8,-9,-10,15,15,15,15,15,15,15,-21,]),'ADD':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[16,-17,-18,-19,-20,-22,16,-22,-5,-6,-7,-8,-9,-10,16,16,16,16,16,16,16,-21,]),'GREATER':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[17,-17,-18,-19,-20,-22,17,-22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,17,-21,]),'GREATEREQU':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[18,-17,-18,-19,-20,-22,18,-22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,18,-21,]),'LESS':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[19,-17,-18,-19,-20,-22,19,-22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,19,-21,]),'LESSEUQ':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[20,-17,-18,-19,-20,-22,20,-22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,20,-21,]),'EQUEQU':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[21,-17,-18,-19,-20,-22,21,-22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,21,-21,]),'NOTEQU':([2,5,6,7,8,9,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[22,-17,-18,-19,-20,-22,22,-22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,22,-21,]),'RPAREN':([5,6,7,8,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,],[-17,-18,-19,-20,39,-22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-21,]),'EQU':([9,],[23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calc':([0,],[1,]),'expression':([0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[2,24,26,27,28,29,30,31,32,33,34,35,36,37,38,]),'var_assign':([0,],[3,]),'empty':([0,],[4,]),'parentheses':([0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expression','calc',1,'p_calc','codegenerator.py',21),
  ('calc -> var_assign','calc',1,'p_calc','codegenerator.py',22),
  ('calc -> empty','calc',1,'p_calc','codegenerator.py',23),
  ('var_assign -> VAR EQU expression','var_assign',3,'p_var_assign','codegenerator.py',28),
  ('expression -> expression POW expression','expression',3,'p_expression','codegenerator.py',46),
  ('expression -> expression MUL expression','expression',3,'p_expression','codegenerator.py',47),
  ('expression -> expression DIV expression','expression',3,'p_expression','codegenerator.py',48),
  ('expression -> expression INTDIV expression','expression',3,'p_expression','codegenerator.py',49),
  ('expression -> expression SUB expression','expression',3,'p_expression','codegenerator.py',50),
  ('expression -> expression ADD expression','expression',3,'p_expression','codegenerator.py',51),
  ('expression -> expression GREATER expression','expression',3,'p_expression','codegenerator.py',52),
  ('expression -> expression GREATEREQU expression','expression',3,'p_expression','codegenerator.py',53),
  ('expression -> expression LESS expression','expression',3,'p_expression','codegenerator.py',54),
  ('expression -> expression LESSEUQ expression','expression',3,'p_expression','codegenerator.py',55),
  ('expression -> expression EQUEQU expression','expression',3,'p_expression','codegenerator.py',56),
  ('expression -> expression NOTEQU expression','expression',3,'p_expression','codegenerator.py',57),
  ('expression -> INT','expression',1,'p_expression_int_float_sci','codegenerator.py',63),
  ('expression -> FLOAT','expression',1,'p_expression_int_float_sci','codegenerator.py',64),
  ('expression -> SCI','expression',1,'p_expression_int_float_sci','codegenerator.py',65),
  ('expression -> parentheses','expression',1,'p_expression_int_float_sci','codegenerator.py',66),
  ('parentheses -> LPAREN expression RPAREN','parentheses',3,'p_parentheses','codegenerator.py',72),
  ('expression -> VAR','expression',1,'p_expression_var','codegenerator.py',78),
  ('empty -> <empty>','empty',0,'p_empty','codegenerator.py',90),
]
